{"version":3,"file":"static/js/269.58834501.chunk.js","mappings":"2NACA,EAA0B,4BAA1B,EAA8D,0BAA9D,EAAoG,8B,SCkCpG,EAhCmB,SAAC,GAAe,IAAD,EAAZA,EAAY,EAAZA,MACpB,OACE,+BACE,gBAAKC,UAAWC,EAAhB,SACGF,IACC,gCACGA,EAAMG,aACL,gBACEC,IAAG,0CAAqCJ,EAAMG,aAC9CE,IAAI,YAGN,gBACED,IAAI,sEACJC,IAAI,SACJC,MAAO,OAIX,iBAAKL,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA0BF,EAAMO,SAChC,wCAAgBP,EAAMQ,WAAtB,SACA,sCAAcR,EAAMS,YAHtB,UAIGT,EAAMU,cAJT,SAImB,oCAAYV,EAAMU,OAAOC,KAAK,kBAO5D,E,SCdUC,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,EClBpB,EAAwB,8BAAxB,EAAkE,kCAAlE,EAA2G,6BCwB3G,EArBuB,WACrB,OACE,iCACE,eAAIlB,UAAWC,EAAf,qCACA,2BACE,eAAmBD,UAAWC,EAA9B,UACE,SAAC,KAAD,CAASoB,GAAI,OAAQrB,UAAWC,EAAhC,mBADOU,MAKT,eAAmBX,UAAWC,EAA9B,UACE,SAAC,KAAD,CAASoB,GAAI,UAAWrB,UAAWC,EAAnC,sBADOU,SAMX,SAAC,KAAD,MAGL,ECtBD,EAAsB,oBCetB,EAbe,WACb,IAAIW,GAAWC,EAAAA,EAAAA,MAIf,OACE,+BACE,mBAAQC,QALG,WACbF,GAAU,EACX,EAG4BtB,UAAWC,EAApC,sBAKL,ECQD,EAhBqB,WACnB,OAA0BwB,EAAAA,EAAAA,UAAS,MAAnC,eAAO1B,EAAP,KAAc2B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAgCH,GAASI,KAAKL,EAC/C,GAAE,CAACC,KAGF,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,CAAY5B,MAAOA,KACnB,SAAC,EAAD,MAGL,C","sources":["webpack://goit-react-hw-05-movies/./src/components/DetailInfo/DetailInfo.module.css?f1b2","components/DetailInfo/DetailInfo.jsx","../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-05-movies/./src/components/NavigationList/NavigationList.module.css?d347","components/NavigationList/NavigationList.jsx","webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","pages/MovieDatails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DetailInfo_wrapper__uDipG\",\"title\":\"DetailInfo_title__x1yuK\",\"container\":\"DetailInfo_container__8punh\"};","import PropTypes from 'prop-types';\nimport css from './DetailInfo.module.css';\n\nconst DetailInfo = ({ movie }) => {\n  return (\n    <>\n      <div className={css.wrapper}>\n        {movie && (\n          <>\n            {movie.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt=\"poster\"\n              />\n            ) : (\n              <img\n                src=\"https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\"\n                alt=\"poster\"\n                width={400}\n              />\n            )}\n\n            <div className={css.container}>\n              <p className={css.title}>{movie.title}</p>\n              <p>Popularity: {movie.popularity} %</p>\n              <p>Overview: {movie.overview}</p>\n              {movie.genres ?? <p>Genres: {movie.genres.join(', ')}</p>}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default DetailInfo;\nDetailInfo.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    popularity: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    genres: PropTypes.array.isRequired,\n  }),\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"NavigationList_title__rzrKT\",\"listItems\":\"NavigationList_listItems__2NPL4\",\"link\":\"NavigationList_link__daO-8\"};","import { NavLink, Outlet } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport css from './NavigationList.module.css';\n\nconst NavigationList = () => {\n  return (\n    <>\n      <h3 className={css.title}>Additional information</h3>\n      <ul>\n        <li key={nanoid()} className={css.listItems}>\n          <NavLink to={'cast'} className={css.link}>\n            Cast\n          </NavLink>\n        </li>\n        <li key={nanoid()} className={css.listItems}>\n          <NavLink to={'reviews'} className={css.link}>\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default NavigationList;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\"};","import css from './Button.module.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst Button = () => {\n  let navigate = useNavigate();\n  const goBack = () => {\n    navigate(-1);\n  };\n  return (\n    <>\n      <button onClick={goBack} className={css.btn}>\n        Go Back\n      </button>\n    </>\n  );\n};\nexport default Button;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as fetchMoviesAPI from '../components/services/API';\nimport DetailInfo from 'components/DetailInfo/DetailInfo';\nimport NavigationList from 'components/NavigationList/NavigationList';\nimport Button from 'components/Button/Button';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesAPI.fetchDetailsInfo(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      <Button />\n      <DetailInfo movie={movie} />\n      <NavigationList />\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["movie","className","css","poster_path","src","alt","width","title","popularity","overview","genres","join","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","to","navigate","useNavigate","onClick","useState","setMovie","movieId","useParams","useEffect","fetchMoviesAPI","then"],"sourceRoot":""}